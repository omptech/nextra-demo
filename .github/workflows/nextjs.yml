name: Build, Deploy, and Manage PR Previews

on:
  push:
    branches:
      - master
  pull_request:
    branches: 
      - master
  pull_request_target:
    types: [closed]

permissions:
  contents: write
  pages: write
  id-token: write
  issues: write
  pull-requests: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18' 

    - name: Install Dependencies
      run: npm install

    - name: Build and Export (Static Site)
      run: npm run build
      env:
        # Use environment variables as needed for your build process
        NEXT_PUBLIC_PR_NUMBER: ${{ github.event.pull_request.number }}

    - name: Deploy to GitHub Pages (Production)
      if: github.event_name == 'push'
      uses: JamesIves/github-pages-deploy-action@4.1.4
      with:
        branch: gh-pages
        folder: out
        token: ${{ secrets.GITHUB_TOKEN }}
        # No target-folder for production deployment

    - name: Deploy PR Preview to GitHub Pages (Alternative)
      if: github.event_name == 'pull_request'
      run: |
        # Setup git with your identity
        git config --global user.name "omptech"
        git config --global user.email "omprakashlodhi38@gmail.com"

        # Ensure the output directory exists
        mkdir -p out

        # Temporary workaround for authentication
        git remote add origin-https "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/omptech/nextra-demo.git"
        git fetch origin-https
        git checkout -b gh-pages origin-https/gh-pages
        
        # Sync PR preview
        rsync -av --exclude='.git' --delete out/ pr-${{ github.event.pull_request.number }}/
        
        git add .
        git status
        git commit -m "Deploy PR preview for PR #${{ github.event.pull_request.number }}" || echo "No changes to commit"
        git push origin-https gh-pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Comment PR Preview URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v5
      with:
        script: |
          const issueNumber = context.issue.number;
          const prPreviewUrl = `https://omptech.github.io/nextra-demo/pr-${issueNumber}`;
          const message = `ðŸš€ PR preview is available at ${prPreviewUrl}`;
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issueNumber,
            body: message
          });
        github-token: ${{ secrets.GITHUB_TOKEN }}

  cleanup-preview:
    if: github.event_name == 'pull_request_target' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'gh-pages'

      - name: Configure Git
        run: |
          git config user.name "omptech"
          git config user.email "omprakashlodhi38@gmail.com"

      - name: Cleanup PR Preview
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          DIRECTORY="pr-$PR_NUMBER"
          # Find the directory in the gh-pages branch and delete it if found
          git fetch origin gh-pages
          git checkout gh-pages
          if [ -d "$DIRECTORY" ]; then
          echo "Directory $DIRECTORY found, deleting..."
          git rm -rf "$DIRECTORY"
          git commit -m "Remove preview for PR #$PR_NUMBER"
          git push origin gh-pages
          else
          echo "Directory $DIRECTORY not found, skipping deletion."
          fi
